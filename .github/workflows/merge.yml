name: merge-master

on:
  push:
    branches:
      - master
    paths-ignore:
      - README.md

env:
  SERVICE_NAME: securebanking-spring-config-server
  GIT_SHA_SHORT: $(echo ${{ github.sha }} | cut -c1-7)

jobs:
  test:
    runs-on: ubuntu-latest
    name: Check master integrity
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v1
        with:
          java-version: "14"
          architecture: x64

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven2-${{ hashFiles('**/pom.xml') }}

      - name: test
        run: |
          make verify
      
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_ACCESS_TOKEN }}
  
  versioning:
    runs-on: ubuntu-latest
    name: Update helm chart
    needs: [test]
    outputs:
      isUpdatedChart: ${{ steps.validator.outputs.isUpdatedChart }}
      isRelease: ${{ steps.validator.outputs.isRelease }}
      version: ${{ steps.binary.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_BOT_TOKEN }}

      - name: binary version
        id: binary
        run: |
          BINARY_VERSION=$(make version)
          echo ::set-output name=version::"$BINARY_VERSION"

      - name: Check for compatible release
        id: validator
        uses: SecureBankingAccessToolkit/securebanking-version-validator@master
        with:
          binaryVersion: ${{ steps.binary.outputs.version }}
          chartPath: "_infra/helm/${{ env.SERVICE_NAME }}/Chart.yaml"

      - name: Commit version update
        if: ${{ steps.validator.outputs.isUpdatedChart == 'true' }}
        run: |
          git config --local user.email "fropenbanking@users.noreply.github.com"
          git config --local user.name "fropenbanking"
          git add _infra/helm/${{ env.SERVICE_NAME }}/Chart.yaml
          git commit --allow-empty -m "Bumping Chart versions ${{ steps.binary.outputs.version }}"
      - name: Temporarily disable "include administrators" protection
        uses: benjefferies/branch-protection-bot@master
        if: ${{ steps.validator.outputs.isUpdatedChart == 'true' }}
        with:
          access_token: ${{ secrets.GH_BOT_TOKEN }}
          enforce_admins: false
      - name: Push changes
        uses: ad-m/github-push-action@master
        if: ${{ steps.validator.outputs.isUpdatedChart == 'true' }}
        with:
          github_token: ${{ secrets.GH_BOT_TOKEN }}
          branch: master
      - name: Enable "include administrators" branch protection
        uses: benjefferies/branch-protection-bot@master
        if: always()
        with:
          access_token: ${{ secrets.GH_BOT_TOKEN }}
          enforce_admins: true
  
  package:
    runs-on: ubuntu-latest
    name: package artifacts
    needs: [test, versioning]
    if: ${{ needs.versioning.outputs.isUpdatedChart == 'false' }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v1
        with:
          java-version: "14"
          architecture: x64

      - uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCR_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - run: |
          gcloud auth configure-docker

      - name: Build Docker Image
        run: |

          make docker tag=${{ env.GIT_SHA_SHORT }}
          docker tag eu.gcr.io/${{ secrets.DEV_REPO }}/securebanking/${{ env.SERVICE_NAME }}:${{ env.GIT_SHA_SHORT }} eu.gcr.io/${{ secrets.DEV_REPO }}/securebanking/${{ env.SERVICE_NAME }}:latest
          docker push eu.gcr.io/${{ secrets.DEV_REPO }}/securebanking/${{ env.SERVICE_NAME }}:latest
      
      - name: 'run functional tests'
        uses: codefresh-io/codefresh-pipeline-runner@master
        with:
          args: '-v SERVICE_NAME=config'
        env:
          PIPELINE_NAME: 'ForgeCloud/sbat-infra/service-build'
          CF_API_KEY: ${{ secrets.CF_API_KEY }}
        id: run-pipeline
  
  tag:
    runs-on: ubuntu-latest
    name: Create tag
    needs: [versioning, package]
    if: ${{ needs.versioning.outputs.isRelease == 'true' }}
    steps:
      - uses: actions/checkout@v3

      - name: push tag
        uses: mathieudutour/github-tag-action@v5.4
        with:
          github_token: ${{ secrets.GH_BOT_TOKEN }}
          custom_tag: ${{ needs.versioning.outputs.version }}
          create_annotated_tag: true
          tag_prefix: ""
